cmd:
  type: python-venv
  command:
    default: python -u run.py
  path:
    default: ~/.opereto/operetovenv

item_properties:

-   direction: input
    editor: text
    key: docker_image
    mandatory: true
    type: text
    value:
    help: The docker image

-   direction: input
    editor: checkbox
    key: build_image
    mandatory: false
    type: boolean
    value: false
    help: Specifies if to build the image at runtime

-   direction: input
    editor: text
    key: dockerfile_path
    mandatory: false
    type: text
    value:
    help: The path to docker context directoy including the dockerfile. If not specified, default is current runner service directory

-   direction: input
    editor: text
    key: build_options
    mandatory: false
    type: text
    value:
    help: Build command options that will be added to the command

-   direction: input
    editor: checkbox
    key: fetch_from_dockerhub
    mandatory: false
    type: boolean
    value: false
    help: Specifies if to fetch the image from docker hub. If build_image flag is checked, the runner will ignore this flag

-   direction: input
    editor: text
    key: test_results_directory
    mandatory: true
    type: text
    value:
    help: The container directory to save the test results. This directory will be mounted by the runner to local directory on the host

-   direction: input
    editor: text
    key: docker_command
    mandatory: true
    type: text
    value:
    help: The docker command to run.

-   editor: json
    key: docker_env_params
    direction: input
    mandatory: false
    type: json
    value: {}
    help: A map of environment key-value strings

-   key: parser_config
    direction: input
    editor: json
    mandatory: true
    type: json
    value:
    help: >
      Test parser service configurations, passing needed input for the selected storage upload service.
      The example below is for using Opereto's "opereto_pytest_results_parser" service (included in the Opereto PyTest Services package)
      Example: {
        "service_id": "opereto_pytest_results_parser",
        "input": null,
        "title": "Parse pytest results"
      }

-   direction: input
    editor: number
    key: keep_parser_running
    mandatory: true
    type: integer
    value: 30
    help: Keep the parser/listeners running after container stops (in seconds)

## output properties
-   direction: output
    editor: hidden
    example: 0
    key: exitcode
    mandatory: true
    store: []
    type: integer
    value: 0

timeout: 3600
type: action
